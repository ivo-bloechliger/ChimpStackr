# Instructions for local build:
# Build inside docker container...
# Follow instruction here: https://stackoverflow.com/questions/28668180/cant-install-pip-packages-inside-a-docker-container-with-ubuntu
# 'sudo systemctl start docker'
# 'sudo chmod 666 /var/run/docker.sock'
# 'docker run -v ~/Documents/Code/ChimpStackr/:/ChimpStackr -w /ChimpStackr appimagecrafters/appimage-builder appimage-builder --skip-tests'
version: 1

script:
  # Remove any previous build
  - rm -rf $TARGET_APPDIR  | true
  # Make usr and icons dirs
  - mkdir -p AppDir/usr AppDir/usr/share/icons/
  # Copy icons in correct folder
  - cp packaging/icons/icon_128x128.png AppDir/usr/share/icons
  # Copy the python application code into the AppDir
  - cp src AppDir/usr -r
  # Install application dependencies
  - python3 -m pip install --ignore-installed --prefix=/usr --root=AppDir -r ./requirements.txt
  
  # If python version is lower than 3.9, we have to use this version of markupsafe
  # src: https://stackoverflow.com/questions/70316777/no-module-named-markupsafe-error-in-jetson-nano
  - python3 -m pip install MarkupSafe==2.0.0

AppDir:
  path: ./AppDir

  app_info:
    id: org.noah-peeters.chimpstackr
    name: ChimpStackr
    icon: icon_128x128
    version: latest
    # Set the python executable as entry point
    exec: usr/bin/python3
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: "$APPDIR/usr/src/run.py $@"

  apt:
    arch: amd64
    allow_unauthenticated: true
    sources:
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3b4fe6acc0b21f32'
      # Qt 6
      - sourceline: deb http://mx.archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse
      - sourceline: deb http://mx.archive.ubuntu.com/ubuntu/ jammy-updates main restricted universe multiverse
      - sourceline: deb http://mx.archive.ubuntu.com/ubuntu/ jammy-backports main restricted universe multiverse
      - sourceline: deb http://security.ubuntu.com/ubuntu jammy-security main restricted universe multiverse
    include:
      - python3
      - python3-pkg-resources

      # PySide6 dependencies
      - appmenu-gtk3-module # https://askubuntu.com/questions/1074926/failed-to-load-module-appmenu-gtk-module-canberra-gtk-module
      - libcanberra-gtk3-module
      - libglx0

      # Qt linux dependencies: https://doc.qt.io/qt-5/linux-requirements.html
      - libfontconfig1-dev
      - libfreetype6-dev
      - libx11-dev
      - libx11-xcb-dev
      - libxext-dev
      - libxfixes-dev
      - libxi-dev
      - libxrender-dev
      - libxcb1-dev
      - libxcb-glx0-dev
      - libxcb-keysyms1-dev
      - libxcb-image0-dev
      - libxcb-shm0-dev
      - libxcb-icccm4-dev
      - libxcb-sync-dev
      - libxcb-xfixes0-dev
      - libxcb-shape0-dev
      - libxcb-randr0-dev
      - libxcb-render-util0-dev
      - libxkbcommon-dev
      - libxkbcommon-x11-dev
    exclude: []

  runtime:
    env:
      PATH: '${APPDIR}/usr/bin:${PATH}'
      # Set python home
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME
      PYTHONHOME: '${APPDIR}/usr'
      PYTHONPATH: '${APPDIR}/usr/lib/python3.10/site-packages'

  test:
    fedora:
      image: appimagecrafters/tests-env:fedora-30
      command: ./AppRun
      use_host_x: True
    debian:
      image: appimagecrafters/tests-env:debian-stable
      command: ./AppRun
      use_host_x: True
    arch:
      image: appimagecrafters/tests-env:archlinux-latest
      command: ./AppRun
      use_host_x: True
    centos:
      image: appimagecrafters/tests-env:centos-7
      command: ./AppRun
      use_host_x: True
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun
      use_host_x: True

AppImage:
  update-information: 'gh-releases-zsync|AppImageCrafters|python-appimage-example|latest|python-appimage-*x86_64.AppImage.zsync'
  sign-key: None
  arch: x86_64
